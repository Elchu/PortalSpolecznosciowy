@using Microsoft.AspNet.Identity
@using PortalSpolecznosciowy.Models
@using PortalSpolecznosciowy.Models.ViewModel
@model PortalSpolecznosciowy.Models.ViewModel.UserFriendToAcceptedViewModel

@{
    ViewBag.Title = "Informacje o użytkowniku";
}
<br />
<div class="row">
    <div class="col-md-3 col-md-offset-1">

        <div class="panel panel-default">

            <div class="panel-heading clearfix">
                <div class="pull-left">Użytkownik</div>
                <div class="pull-right">
                    @if (User.Identity.IsAuthenticated && User.Identity.GetUserId().Equals(Model.User.Id))
                    {
                        @Html.ActionLink("Edytuj", "Edit", "ProfilUser", new { id = Model.User.Id }, null)
                    }
                </div>
            </div>

            <div class="panel-body text-center">

                @if (!Model.User.Image.IsEmpty())
                {
                    if (Model.User.Image.Contains("https"))
                    {
                        <img src="@Model.User.Image" class="img-responsive" alt="Avatar użytkownika" height="200" width="200" />
                    }
                    else
                    {
                        <img src="@Url.Content("/Content/UploadUsersAvatars/" + Model.User.Id + "/" + Model.User.Image)" class="img-responsive" alt="Avatar użytkownika" height="200" width="200" />
                    }
                }

                <h2>
                    @if (User.Identity.IsAuthenticated && User.Identity.GetUserId().Equals(Model.User.Id))
                    {
                        @Html.ActionLink(Model.User.FullName, "Show", "ProfilUser", new { id = Model.User.Id }, null)
                    }
                    else
                    {
                        @Model.User.FullName
                    }
                </h2>

                @if (Model.User.Sex == "m")
                {
                    <p>Mężczyzna</p>
                }
                else
                {
                    <p>Kobieta</p>
                }
                <p>@Model.User.Email</p>

            <p>
                <a href="@Url.Action("ListOfFriends", "ProfilUser")" class="btn btn-xs btn-primary">Znajomych <span class="badge">@Model.AllFriendsUser.Count()</span></a>
            </p>


        </div>
    </div>@* PROFIL UZYTKOWNIKA panel panel-default*@

            @if (User.Identity.IsAuthenticated && Model.User.Id == User.Identity.GetUserId() && Model.FriendsToAccepted.Any(a=>a.IsAccepted == false))
            {
                <div class="panel panel-default">
                    <div class="panel-body">
                    <p>Użytkownicy do zaakceptowania: </p>
                    @foreach (UserFriendTemp friend in Model.FriendsToAccepted)
                    {
                        if (friend.IsAccepted == false)
                        {
                            using (Html.BeginForm("Accept", "Friend", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("friendId", friend.IdUser)
                                <button class="btn btn-primary"><h6>Przyjmij zaproszenie od @friend.UserFullName</h6></button>
                            }
                        }

                    }
                    </div>
                </div>@* UZYTKOWNICY DO ZAAKCEPTOWANIA panel panel-default*@
            }


    </div>@*col-md-3 col-md-offset-1*@

    <div class="col-md-7">
        @Html.Partial("_formAddedPostPartial", Model.User)

        @Html.Partial("_displayPostPartial", Model.User.Post)
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function OnComplete() {
            alert("Wpis został pomyślnie usunięty.");
        }

        function OnFailure() {
            alert("Wystąpił błąd podczas usuwania wpisu.");
        }
    </script>
}
